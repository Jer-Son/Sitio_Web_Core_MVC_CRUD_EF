// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sitio_Web_Core_MVC_CRUD_EF.Data;

#nullable disable

namespace SitioWebCoreMVCCRUDEF.Migrations
{
    [DbContext(typeof(Sitio_Web_Core_MVC_CRUD_EFContext))]
    [Migration("20221117192930_final")]
    partial class final
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Area", b =>
                {
                    b.Property<int>("IdArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArea"));

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdArea");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Cargo", b =>
                {
                    b.Property<int>("IdCargo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCargo"));

                    b.Property<string>("NameCargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCargo");

                    b.ToTable("Cargo");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Contrato", b =>
                {
                    b.Property<int>("IdContrato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContrato"));

                    b.Property<string>("NameContrato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdContrato");

                    b.ToTable("Contrato");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpresa"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsable")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmpresa");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Equipo", b =>
                {
                    b.Property<int>("IdEquipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipo"));

                    b.Property<int>("ContratoId")
                        .HasColumnType("int");

                    b.Property<int?>("Disco")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreMaquina")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Procesador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Ram")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serial")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEquipo");

                    b.HasIndex("ContratoId");

                    b.HasIndex("Serial")
                        .IsUnique()
                        .HasFilter("[Serial] IS NOT NULL");

                    b.ToTable("Equipo");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Leasing", b =>
                {
                    b.Property<int>("IdLeasing")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLeasing"));

                    b.Property<string>("Analista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Propiedad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioRed")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLeasing");

                    b.HasIndex("EquipoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Leasing");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.LeasingPerifericos", b =>
                {
                    b.Property<int>("IdLeasingPerifericos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLeasingPerifericos"));

                    b.Property<int>("LeasingId")
                        .HasColumnType("int");

                    b.Property<int>("PerifericoId")
                        .HasColumnType("int");

                    b.HasKey("IdLeasingPerifericos");

                    b.HasIndex("LeasingId");

                    b.HasIndex("PerifericoId");

                    b.ToTable("LeasingPerifericos");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.LeasingSoftware", b =>
                {
                    b.Property<int>("IdLeasingSoftware")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLeasingSoftware"));

                    b.Property<int>("LeasingId")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareId")
                        .HasColumnType("int");

                    b.HasKey("IdLeasingSoftware");

                    b.HasIndex("LeasingId");

                    b.HasIndex("SoftwareId");

                    b.ToTable("LeasingSoftware");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Operacion", b =>
                {
                    b.Property<int>("IdOperacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOperacion"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("OperacionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOperacion");

                    b.HasIndex("AreaId");

                    b.ToTable("Operacion");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Periferico", b =>
                {
                    b.Property<int>("IdPeriferico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPeriferico"));

                    b.Property<string>("PerifericoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPeriferico");

                    b.ToTable("Periferico");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Sede", b =>
                {
                    b.Property<int>("IdSede")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSede"));

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Cuenta")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdenInt")
                        .HasColumnType("int");

                    b.Property<string>("Pa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsableTI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSede");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Sede");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Software", b =>
                {
                    b.Property<int>("IdSoftware")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSoftware"));

                    b.Property<string>("SoftwareName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Softwarelicencia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSoftware");

                    b.ToTable("Software");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<int>("Cedula")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OperacionId")
                        .HasColumnType("int");

                    b.Property<int>("SedeId")
                        .HasColumnType("int");

                    b.Property<string>("celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("extenseion")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario");

                    b.HasIndex("CargoId");

                    b.HasIndex("Cedula")
                        .IsUnique();

                    b.HasIndex("OperacionId");

                    b.HasIndex("SedeId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Equipo", b =>
                {
                    b.HasOne("Sitio_Web_Core_MVC_CRUD_EF.Models.Contrato", "Contrato")
                        .WithMany("Equipos")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Leasing", b =>
                {
                    b.HasOne("Sitio_Web_Core_MVC_CRUD_EF.Models.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sitio_Web_Core_MVC_CRUD_EF.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.LeasingPerifericos", b =>
                {
                    b.HasOne("Sitio_Web_Core_MVC_CRUD_EF.Models.Leasing", "Leasing")
                        .WithMany("LeasingPeriferico")
                        .HasForeignKey("LeasingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sitio_Web_Core_MVC_CRUD_EF.Models.Periferico", "Periferico")
                        .WithMany("LeasingPeriferico")
                        .HasForeignKey("PerifericoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leasing");

                    b.Navigation("Periferico");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.LeasingSoftware", b =>
                {
                    b.HasOne("Sitio_Web_Core_MVC_CRUD_EF.Models.Leasing", "Leasing")
                        .WithMany("LeasingSoftware")
                        .HasForeignKey("LeasingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sitio_Web_Core_MVC_CRUD_EF.Models.Software", "Software")
                        .WithMany("LeasingSoftware")
                        .HasForeignKey("SoftwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leasing");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Operacion", b =>
                {
                    b.HasOne("Sitio_Web_Core_MVC_CRUD_EF.Models.Area", "Area")
                        .WithMany("Operaciones")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Sede", b =>
                {
                    b.HasOne("Sitio_Web_Core_MVC_CRUD_EF.Models.Empresa", "Empresa")
                        .WithMany("Sedes")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Usuario", b =>
                {
                    b.HasOne("Sitio_Web_Core_MVC_CRUD_EF.Models.Cargo", "Cargo")
                        .WithMany("Usuarios")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sitio_Web_Core_MVC_CRUD_EF.Models.Operacion", "Operacion")
                        .WithMany("Usuarios")
                        .HasForeignKey("OperacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sitio_Web_Core_MVC_CRUD_EF.Models.Sede", "Sede")
                        .WithMany("Usuarios")
                        .HasForeignKey("SedeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Operacion");

                    b.Navigation("Sede");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Area", b =>
                {
                    b.Navigation("Operaciones");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Cargo", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Contrato", b =>
                {
                    b.Navigation("Equipos");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Empresa", b =>
                {
                    b.Navigation("Sedes");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Leasing", b =>
                {
                    b.Navigation("LeasingPeriferico");

                    b.Navigation("LeasingSoftware");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Operacion", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Periferico", b =>
                {
                    b.Navigation("LeasingPeriferico");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Sede", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Sitio_Web_Core_MVC_CRUD_EF.Models.Software", b =>
                {
                    b.Navigation("LeasingSoftware");
                });
#pragma warning restore 612, 618
        }
    }
}
